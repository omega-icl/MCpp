/*!

@mainpage MC++ (version 2.1): Toolkit for Construction, Manipulation and Bounding of Factorable Functions

@author Benoit C. Chachuat <tt>(b.chachuat@imperial.ac.uk)</tt> and OMEGA Research Group (http://www3.imperial.ac.uk/environmentenergyoptimisation)
@date 2021

MC++ provides a collection of C++ classes for construction, manipulation and bounding of factorable functions. The bounding methods include interval bounds, spectral bounds, convex/concave relaxations, Taylor and Chebyshev model estimators, and polyhedral relaxations. The implementation of MC++ relies on operator/function overloading and templates. A principal aim in developing MC++ is to make the computation of bounds as simple and natural as possible, similar to computing function values in real arithmetics, for faster prototyping and testing of new algorithms and ideas. The use of DAGs to define factorable functions is recommended for efficiency with complex bounding types and enables manipulating expressions, including automatic differentiation and lifting of polynomial subexpressions into quadratic forms.


\section sec_MC_install How Do I Install MC++?

MC++ is released as open source code under the <A href="http://www.eclipse.org/legal/epl-v10.html">Eclipse Public License (EPL)</A>.

MC++ depends on the following third-party libraries:
- <A href="http://www.fadbad.com/fadbad.html">FADBAD++</A> (version 2.1) to enable automatic differentiation (AD) in MC++, which <b>is provided</b> in <tt>src/3rdparty/fadbad++/</tt>
- <A href="http://cpplapack.sourceforge.net">CPPLAPACK</A> which provides a C++ wrapper for <A href="http://www.netlib.org/blas/">BLAS</A> and <A href="http://www.netlib.org/lapack/">LAPACK</A> and <b>is provided</B> in <tt>src/3rdparty/cpplapack-2015.05.11-1/</tt>. The libraries <A href="http://www.netlib.org/blas/">BLAS</A> and <A href="http://www.netlib.org/lapack/">LAPACK</A> themselves are <b>not included</B> in the MC++ distribution. On Ubuntu-Linux OS for instance, both BLAS and LAPACK can be installed using: <tt>$ sudo apt-get install liblapack-dev</tt>
- <A href="http://www.ti3.tu-harburg.de/Software/PROFILEnglisch.html">PROFIL</A>, <A href="https://www.boost.org/doc/libs/1_68_0/libs/numeric/interval/doc/interval.htm">Boost Interval Arithmetic Library</A> or <A href="http://www2.math.uni-wuppertal.de/wrswt/software/filib.html">FILIB++</A> to enable verified interval arithmetics, which are <b>not included</B> in the MC++ distribution
- <A href="https://www.hsl.rl.ac.uk/catalogue/mc13.html">MC13</A>, <A href="https://www.hsl.rl.ac.uk/catalogue/mc13.html">MC13</A> and <A href="https://www.hsl.rl.ac.uk/catalogue/mc13.html">MC13</A> for <A href="https://www.hsl.rl.ac.uk/index.html">HSL Mathematical Software Library</A> to enable symbolic block-decomposition in large-scale systems of equations, which are <b>not included</B> in the MC++ distribution.
.

Version 2.1 of the MC++ library can be obtained by cloning the following GitHub repository:

<tt>
$ git clone https://github.com/omega-icl/mcpp.git
$ git checkout 2.1
</tt>

The folder <tt>mcpp</tt> contains the files <TT>AUTHORS</TT>, <TT>CHANGELOG</TT>, <TT>INSTALL</TT>, <TT>LICENSE</TT> and <TT>README</TT>, as well as 3 subdirectories:
- <tt>src</tt> contains the source code of MC++, which consists of header files only and needs linking to third-party libraries.
- <tt>doc</tt> contains the Doxygen documentation for CANON, which needs to be compiled using the file <tt>MC++.dox</tt> and can then be accessed by opening the file <tt>doc/html/index.html</tt> with any browser.
- <tt>test</tt> contains simple examples to help understand how to use different classes and types in MC++.
.

<CENTER><TABLE border="1">
<TR>
<TD><CENTER><TABLE BORDER=0>
  <TR>
  <TD>MC++ has been developed and tested primarily under Ubuntu-Linux with the compiler <a href="http://gcc.gnu.org/"><tt>gcc</tt></a> (with C++17)</TD>
  </TR>
  </TABLE></CENTER></TD>
</TR>
</TABLE></CENTER> 

To install the MC++ library, change to the <tt>src</tt> directory, and tailor the sections THIRD-PARTY LIBRARIES and COMPILATION to your current system in the file <tt>makeoptions.mk</tt>. Use the flags <tt>-DMC__USE_PROFIL</tt>, <tt>-DMC__USE_FILIB</tt> or <tt>-DMC__USE_BOOST</tt> to indicate which verified interval library to use and the flag <tt>-DMC__USE_HSL</tt> to indicate whether to compile with HSL:

\code
# THIRD-PARTY LIBRARIES <<-- CHANGE AS APPROPRIATE -->>

PATH_3RD_PARTY = $(PATH_MC)/src/3rdparty

PATH_LAPACK = $(PATH_3RD_PARTY)/cpplapack-2015.05.11-1
LIB_LAPACK  = -llapack -lblas
INC_LAPACK  = -I$(PATH_LAPACK)/include
FLAG_LAPACK =

PATH_FADBAD = $(PATH_3RD_PARTY)/fadbad++
LIB_FADBAD  = 
INC_FADBAD  = -I$(PATH_FADBAD)
FLAG_FADBAD =

PATH_PROFIL = /opt/Profil-2.0.8
LIB_PROFIL  = -L$(PATH_PROFIL)/lib -lProfilPackages -lProfil -lBias -llr
INC_PROFIL  = -I$(PATH_PROFIL)/include
FLAG_PROFIL = #-DMC__USE_PROFIL

PATH_FILIB  = /opt/filib++
LIB_FILIB   = -L$(PATH_FILIB)/lib -lprim
INC_FILIB   = -I$(PATH_FILIB)/include -I$(PATH_FILIB)/include/interval
FLAG_FILIB = -frounding-math #-DMC__USE_FILIB

PATH_BOOST = $(PATH_3RD_PARTY)/boost
LIB_BOOST  =
INC_BOOST  = -I$(PATH_BOOST) 
FLAG_BOOST = -DBOOST_UBLAS_NO_STD_CERR -DMC__USE_BOOST

PATH_HSL = 
LIB_HSL  = -lmc13 -lmc21 -lmc33 -lgfortran
INC_HSL  = 
FLAG_HSL = -DMC__USE_HSL

# COMPILATION <<-- CHANGE AS APPROPRIATE -->>

DEBUG = -g
PROF  = #-pg
OPTIM = #-O2
WARN  = -Wall -Wno-misleading-indentation -Wno-unknown-pragmas -Wno-parentheses
CPP17 = -std=c++17
CC    = gcc-9
CPP   = g++-9
\endcode

Then, create the <tt>include</tt> directory (if not pre-existing) together with symbolic links to the header files in this directory, by typing:

<tt>
$ make install
</tt>

In order to remove all symbolic links created in the <tt>include</tt> directory and clean the <tt>src</tt> directory, type:

<tt>
$ make cleaninstall
</tt>

The <a href="http://www.stack.nl/~dimitri/doxygen/"><tt>Doxygen</tt></a> documentation of MC++ can be generated from the <tt>doc/</tt> folder by typing:

<tt>
$ doxygen MC++.dox 
</tt>


\section sec_MC_doc Where can I learn more about MC++?

A description of the main components of MC++ can be found under <A HREF="pages.html">Related Pages</A>:
- \ref page_FFUNC
- \ref page_INTERVAL
- \ref page_MCCORMICK
- \ref page_SPECBND
- \ref page_TAYLOR
- \ref page_CHEBYSHEV
- \ref page_ELLIPSOID
- \ref page_POLYHEDRAL
.

\section sec_MC_examples How Can I Run the Test Problems of MC++?

Go to the <tt>test</tt> directory, and select one of the subdirectories, e.g.

<tt>
$ cd test/MCCORMICK
</tt>

At the command line, type:

<tt>
$ make
</tt>

to create the executable file <tt>MC-1D</tt> and run it as:

<tt>
$ ./MC-1D
</tt>

This executable generates a file containing the McCormick relaxations and subgradients called <tt>MC-1D.out</tt>. If the plotting program <A href="http://www.gnuplot.info/">GNUPLOT</A> is installed on your computer, the resulting bounds and relaxations can be visualized by typing:

<tt>
$ gnuplot MC-1D.g
</tt>

<CENTER><TABLE border="1">
<TR>
<TD><CENTER><TABLE BORDER=0>
  <TR>
  <TD>We hope you will enjoy using MC++ and find it useful!</TD>
  </TR>
  <TR>
  <TD> For more information or to provide us feedback, please email <a href="mailto:b.chachuat@imperial.ac.uk">Benoit Chachuat</a></TD>
  </TR>
  </TABLE></CENTER></TD>
</TR>
</TABLE></CENTER> 


\section sec_MC_references References

A (growing) selection of papers that describe or use MC++ are:
- Bompadre, A., A. Mitsos, <A href="http://dx.doi.org/10.1007/s10898-011-9685-2">Convergence rate of McCormick relaxations</A>, <I>Journal of Global Optimization</I> <B>52</B>(1):1-28, 2012
- Bompadre, A., A. Mitsos, B. Chachuat, <A href="http://dx.doi.org/10.1007/s10898-012-9998-9">Convergence analysis of Taylor models and McCormick-Taylor models</A>, <i>Journal of Global Optimization</i>, <b>57</b>(1):75-114, 2013
- Chachuat, B, B. Houska, R. Paulen, N. Peric, J. Rajyaguru, M.E. Villanueva, <A href="http://dx.doi.org/10.1016/j.ifacol.2015.09.097">Set-Theoretic Approaches in Analysis, Estimation and Control of Nonlinear Systems</A>, <I>IFAC-PapersOnLine</I>, <b>48</b>(8):981-995, 2015
- Houska, B., M.E. Villanueva, B. Chachuat, <A href="http://cdc2013.units.it/index.php">A validated integration algorithm for nonlinear ODEs using Taylor models and ellipsoidal calculus</A>, <I>52nd IEEE Conference on Decision and Control (CDC)</I>, December 10-13, 2013, Florence, Italy
- Mitsos, A., B. Chachuat, P.I. Barton, <A href="http://dx.doi.org/10.1137/080717341">McCormick-based relaxations of algorithms</A>, <i>SIAM Journal on Optimization</i>, <b>20</b>(2):573-601, 2009
- Rajyaguru, J., Villanueva M.E., Houska B., Chachuat B., <A href="http://dx.doi.org/10.1007/s10898-016-0474-9">Chebyshev model arithmetic for factorable functions</A>, <i>Journal of Global Optimization</i>, in press
- Sahlodin, M.A., and B. Chachuat, <A href="http://dx.doi.org/10.1016/j.compchemeng.2011.01.031">Convex/concave relaxations of parametric ODEs using Taylor models</A>, <i>Computers & Chemical Engineering</i>, <b>35</b>(5):844-857, 2011
- Scott, J.K., M.D. Stuber, P.I. Barton, <A href="http://dx.doi.org/10.1007/s10898-011-9664-7">Generalized McCormick relaxations</A>. <i>Journal of Global Optimization</i>, <b>51</b>(4), 569-606, 2011
- Tsoukalas, A., A. Mitsos, <A href="http://www.optimization-online.org/DB_HTML/2012/05/3473.html">Multi-variate McCormick relaxations</A>, <i>Journal of Global Optimization</i>, <b>59</b>(2):633-662, 2014
- Villanueva, M.E., J. Rajyagurua, B. Houskab, B. Chachuat, <A href="https://doi.org/10.1016/B978-0-444-63578-5.50123-7">"Ellipsoidal Arithmetic for Multivariate Systems"</A>, <i>Computer Aided Chemical Engineering</i>, <b>37</b>, 767-772, 2015.
- Wechsung, A., P.I. Barton, <A href="http://dx.doi.org/10.1007/s10898-013-0060-3">Global optimization of bounded factorable functions with discontinuities</A>, <i>Journal of Global Optimization</i>, <b>58</b>(1):1-30, 2014
.

*/

